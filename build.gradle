group 'it.mariani.titti'
version '1.0-SNAPSHOT'

buildscript {

	ext {
		springBootVersion = '2.3.3.RELEASE'
		springCloudVersion = '2.2.3.RELEASE'
		springBootGradlePluginVersion = '2.4.1'
		springFrameworkVersion = '5.3.2'
		springSecurityVersion = '5.3.2.RELEASE'
		thymeLeafVersion = '3.0.11.RELEASE'
		snakeYamlVersion = '1.26'
		dockerGradlePluginVersion = '0.25.0'
		googleGsonVersion = '2.8.5'
		validationApiVersion = '2.0.1.Final'
		jettyServerVersion = '9.4.27.v20200227'
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootGradlePluginVersion}")
		classpath("com.palantir.gradle.docker:gradle-docker:${dockerGradlePluginVersion}")
	}

}

apply from: 'setJVMArgs.gradle'

//plugins.withType(JavaPlugin).configureEach {
//    java {
//        modularity.inferModulePath = true
//    }
//}

subprojects {

	apply plugin: 'java'
	apply plugin: 'checkstyle'
//	apply plugin: 'com.palantir.docker-run'
	
	ext.moduleName = 'titti.springboot'

	compileJava {
		options.deprecation = true
	
		sourceCompatibility = 11
		targetCompatibility = 11

		inputs.property("moduleName", moduleName)

		doLast {
			println 'CM -- compileJava'
		}
	}

	checkstyle {
		toolVersion '8.30'
		configDirectory.set file("$project.rootDir/config/checkstyle")
		reportsDir = file("$project.buildDir/reports/checkstyle")
	}
	
	checkstyleMain {
		source ='src/main/java'
	}
	
	task run(dependsOn: ':bootRun') {
		doLast {
			println 'CM -- BootRun'
		}
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/release" }
//		maven { url "https://repo.spring.io/snapshot" }
//		maven { url "https://repo.spring.io/libs-snapshot" }
	}
	

	wrapper {
		gradleVersion = '6.4'
	}

}

task superBuild(dependsOn: ':bootWar') {
	group = 'Build'
	doLast {
		println 'CM -- BootWar'
		copy {
		    from "./src/main/resources/static/"
    		into "./config/docker/http/htdocs"
    	}

	}
}

allprojects {
}
