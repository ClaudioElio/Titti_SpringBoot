group 'it.mariani.titti'
version '1.0-SNAPSHOT'

buildscript {

	ext {
		springBootVersion = '2.1.9.RELEASE'
		springCloudVersion = '2.1.4.RELEASE'
		springEurekaVersion = '2.1.3.RELEASE'
		springBootGradlePluginVersion = '2.1.8.RELEASE'
		springFrameworkVersion = '5.1.10.RELEASE'
		springSecurityVersion = '5.1.6.RELEASE'
		springOauthVersion = '2.1.8.RELEASE'
		thymeLeafVersion = '3.0.11.RELEASE'
		snakeYamlVersion = '1.24'
		dockerGradlePluginVersion = '0.22.1'
//		jettyServerVersion = '9.4.15.v20190215' //'9.4.12.v20180830'
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/libs-snapshot" }
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootGradlePluginVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerGradlePluginVersion}")
	}

}

apply from: 'setJVMArgs.gradle'

subprojects {

	apply plugin: 'java'
	apply plugin: 'checkstyle'
//	apply plugin: 'com.palantir.docker-run'
	
	ext.moduleName = 'titti.springboot'

	compileJava {
		options.deprecation = true
	
		sourceCompatibility = 12
		targetCompatibility = 12

		inputs.property("moduleName", moduleName)
		doFirst {
//			options.compilerArgs = [
//				'--module-path', classpath.asPath,
//			]
//        	classpath = files()  
    	}
		doLast {
			println 'CM -- compileJava'
		}
	}

	checkstyle {
		toolVersion '8.0'
//		configFile file("$project.rootDir/config/checkstyle/checkstyle.xml")
		configDir file("$project.rootDir/config/checkstyle")
		reportsDir = file("$project.buildDir/reports/checkstyle")
	}
	
	checkstyleMain {
		source ='src/main/java'
	}
	
	task run(dependsOn: ':bootRun') {
		doLast {
			println 'CM -- BootRun'
		}
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/libs-snapshot" }
	}
	

	wrapper {
		gradleVersion = '5.6.2'
	}

}

	task superBuild(dependsOn: ':bootWar') {
		group = 'Build'
		doLast {
			println 'CM -- BootWar'
			copy {
			    from "./src/main/resources/static/"
	    		into "./config/docker/http/htdocs"
	    	}
	
		}
	}

allprojects {
}
